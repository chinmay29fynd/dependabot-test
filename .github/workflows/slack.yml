name: Dependabot PR Alerts

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read
  security-events: read

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GIT_PAT }}
          alert-lookup: true
          compat-lookup: true
          
      - name: Get repository Dependabot alerts
        id: security-alerts
        run: |
          # Get all Dependabot alerts for this repository
          ALERTS_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GIT_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts")
          
          # Count open alerts
          OPEN_ALERTS=$(echo "$ALERTS_RESPONSE" | jq -r '.[] | select(.state == "open") | .security_vulnerability.severity' | wc -l)
          
          # Get alert details (first 3 alerts) - keep original line breaks
          ALERT_DETAILS=$(echo "$ALERTS_RESPONSE" | jq -r '.[] | select(.state == "open") | "• \(.security_vulnerability.severity): \(.security_vulnerability.package.name) (\(.security_vulnerability.vulnerable_version_range))"' | head -3)
          
          echo "open-alerts-count=$OPEN_ALERTS" >> $GITHUB_OUTPUT
          echo "alert-details<<EOF" >> $GITHUB_OUTPUT
          echo "$ALERT_DETAILS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "Found $OPEN_ALERTS open Dependabot alerts"
          echo "Alert details:"
          echo "$ALERT_DETAILS"
          
      - name: Get dependency versions
        id: dependency-versions
        run: |
          # Get the full dependency information
          DEPS_JSON='${{ steps.dependabot-metadata.outputs.updated-dependencies-json }}'
          
          # Extract version information for all dependencies
          VERSION_INFO=$(echo "$DEPS_JSON" | jq -r '.[] | "• \(.name): \(.previous-version) → \(.new-version)"' 2>/dev/null || echo "• Version info not available")
          
          echo "version-info<<EOF" >> $GITHUB_OUTPUT
          echo "$VERSION_INFO" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "Version information:"
          echo "$VERSION_INFO"
          
      - name: Notify Slack about Dependabot PR
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#test-dep-bot'
          text: |
            🚨 *Dependabot Security Update*
            
            *Repository:* ${{ github.repository }}
            *PR Number:* #${{ github.event.pull_request.number }}
            *Branch:* ${{ github.event.pull_request.head.ref }}
            
            *📦 Dependencies Updated:*
            ${{ steps.dependabot-metadata.outputs.dependency-names }}
            
            *🔧 Update Details:*
            • *Type:* ${{ steps.dependabot-metadata.outputs.dependency-type }}
            • *Update Type:* ${{ steps.dependabot-metadata.outputs.update-type || 'Version update' }}
            • *Package Ecosystem:* ${{ steps.dependabot-metadata.outputs.package-ecosystem }}
            • *Directory:* ${{ steps.dependabot-metadata.outputs.directory }}
            • *Target Branch:* ${{ steps.dependabot-metadata.outputs.target-branch }}
            
            * Version Changes:*
            • *From:* ${{ steps.dependabot-metadata.outputs.previous-version || 'N/A' }}
            • *To:* ${{ steps.dependabot-metadata.outputs.new-version || 'N/A' }}
            
            *🛡️ Security Information:*
            ${{ steps.dependabot-metadata.outputs.alert-state == 'OPEN' && '🚨 *SECURITY ALERT DETECTED*' || '🛡️ *Security vulnerability fix*' }}
            ${{ steps.dependabot-metadata.outputs.alert-state && format('• *Alert State:* {0}', steps.dependabot-metadata.outputs.alert-state) || '• *Alert State:* No direct security alert' }}
            ${{ steps.dependabot-metadata.outputs.ghsa-id && format('• *GHSA ID:* {0}', steps.dependabot-metadata.outputs.ghsa-id) || '• *GHSA ID:* Not available' }}
            ${{ steps.dependabot-metadata.outputs.cvss && steps.dependabot-metadata.outputs.cvss != '0' && format('• *CVSS Score:* {0}', steps.dependabot-metadata.outputs.cvss) || '• *CVSS Score:* Not available' }}
            • *Open Dependabot Alerts in Repo:* ${{ steps.security-alerts.outputs.open-alerts-count }}
            
            ${{ steps.security-alerts.outputs.open-alerts-count != '0' && '• *Active Alerts:*' || '' }}
            ${{ steps.security-alerts.outputs.alert-details }}
            
            *📈 Compatibility:*
            ${{ steps.dependabot-metadata.outputs.compatibility-score && steps.dependabot-metadata.outputs.compatibility-score != '0' && format('• *Compatibility Score:* {0}', steps.dependabot-metadata.outputs.compatibility-score) || '• *Compatibility Score:* Not available' }}
            
            *📋 Summary:*
            Updates ${{ steps.dependabot-metadata.outputs.dependency-names }} to fix security vulnerabilities and improve dependency health.
            
            <${{ github.event.pull_request.html_url }}|View Dependabot PR>
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 